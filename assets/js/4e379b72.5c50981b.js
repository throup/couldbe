"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[92],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2162:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},i="ShowOrToString",l={unversionedId:"examples/showortostring",id:"examples/showortostring",title:"ShowOrToString",description:"If you are using the Cats library, you can define a Show type class for any data type.",source:"@site/docs/examples/showortostring.md",sourceDirName:"examples",slug:"/examples/showortostring",permalink:"/couldbe/docs/examples/showortostring",draft:!1,editUrl:"https://github.com/throup/couldbe/tree/main/website/docs/examples/showortostring.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/couldbe/docs/category/examples"},next:{title:"PartialOrderOrEq",permalink:"/couldbe/docs/examples/partialorderoreq"}},s={},p=[],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"showortostring"},"ShowOrToString"),(0,o.kt)("p",null,"If you are using the Cats library, you can define a ",(0,o.kt)("inlineCode",{parentName:"p"},"Show")," type class for any data type."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"// Simplified definition.\n// See https://typelevel.org/cats/typeclasses/show.html for further details\ntrait Show[T]:\n  def show(t: T): String\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Show")," type provides a String representation of an object, guaranteed to be a deliberate choice instead of the default ",(0,o.kt)("inlineCode",{parentName:"p"},"toString()")," defined on every JVM object."),(0,o.kt)("p",null,"Sounds great! We should use it... if it is defined."),(0,o.kt)("p",null,"But maybe this is not ",(0,o.kt)("em",{parentName:"p"},"critical")," to our logic. Maybe we are logging, within a greater algortithm, and which to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"Show")," representation when it is defined. But if it isn't, we can accept falling back to the default ",(0,o.kt)("inlineCode",{parentName:"p"},"toString()")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'// With Show\nlog.info("We diddled the doodle using " + Show.show(someObject))\n\n// Without Show\nlog.info("We diddled the doodle using " + someObject.toString)\n')),(0,o.kt)("p",null,"This sounds like an optional ",(0,o.kt)("inlineCode",{parentName:"p"},"given"),"!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"if (CouldBeGiven[Show[SomeObject]].isGiven) {\n  // use Show\n} else {\n  // use toString\n}\n")),(0,o.kt)("p",null,"In fact, the ",(0,o.kt)("inlineCode",{parentName:"p"},"couldbe-cats")," package provides a ready implementation of ",(0,o.kt)("inlineCode",{parentName:"p"},"ShowOrToString"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"trait ShowOrToString[-A: CouldHave[Show]]:\n  def s(a: A): String = CouldHave[Show, A].act(_.show(a))(() => a.toString)\n")),(0,o.kt)("p",null,"which allows you to simplify the logic to:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'def yourFunction[A: ShowOrToString](a: A):\n  // ...\n  log.info("We diddled the doodle using " + ShowOrToString.s(someObject))\n  // ...\n')))}u.isMDXComponent=!0}}]);