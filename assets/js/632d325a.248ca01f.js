"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[790],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(r),m=n,f=u["".concat(p,".").concat(m)]||u[m]||c[m]||i;return r?a.createElement(f,l(l({ref:t},d),{},{components:r})):a.createElement(f,l({ref:t},d))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var s=2;s<i;s++)l[s]=r[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9034:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const i={sidebar_position:2},l="PartialOrderOrEq",o={unversionedId:"examples/partialorderoreq",id:"examples/partialorderoreq",title:"PartialOrderOrEq",description:"If you are using the Cats library, you can define a PartialOrder type class for any data type.",source:"@site/docs/examples/partialorderoreq.md",sourceDirName:"examples",slug:"/examples/partialorderoreq",permalink:"/couldbe/docs/examples/partialorderoreq",draft:!1,editUrl:"https://github.com/throup/couldbe/tree/main/website/docs/examples/partialorderoreq.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"ShowOrToString",permalink:"/couldbe/docs/examples/showortostring"}},p={},s=[],d={toc:s},u="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"partialorderoreq"},"PartialOrderOrEq"),(0,n.kt)("p",null,"If you are using the Cats library, you can define a ",(0,n.kt)("inlineCode",{parentName:"p"},"PartialOrder")," type class for any data type."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// Simplified definition.\n// See https://typelevel.org/cats/api/cats/kernel/PartialOrder.html for further details\ntrait PartialOrder[A]:\n  def partialCompare(x: A, y: A): Double\n")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"PartialOrder")," type provides a method for comparing two objects of the given type, returning a double value of:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"0.0 if the two objects are equivalent"),(0,n.kt)("li",{parentName:"ul"},"-1.0 if ",(0,n.kt)("inlineCode",{parentName:"li"},"x < y")),(0,n.kt)("li",{parentName:"ul"},"1.0 if ",(0,n.kt)("inlineCode",{parentName:"li"},"x < y")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"NaN")," if ",(0,n.kt)("inlineCode",{parentName:"li"},"x")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"y")," cannot be compared.")),(0,n.kt)("p",null,"Cats is also kind enough to provide implicit ",(0,n.kt)("inlineCode",{parentName:"p"},"<"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"<="),", ",(0,n.kt)("inlineCode",{parentName:"p"},"==="),", ",(0,n.kt)("inlineCode",{parentName:"p"},">=")," and ",(0,n.kt)("inlineCode",{parentName:"p"},">")," operators if the given type does not provide them already."),(0,n.kt)("p",null,"That's all nice, but not every type comes with a given ",(0,n.kt)("inlineCode",{parentName:"p"},"PartialOrder")," for us to use."),(0,n.kt)("p",null,"But logically, it must be possible to define a ",(0,n.kt)("inlineCode",{parentName:"p"},"PartialOrder")," for ",(0,n.kt)("em",{parentName:"p"},"every")," type; even if it is ",(0,n.kt)("em",{parentName:"p"},"very partial!")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"couldbe-cats")," package provides a ready implementation of ",(0,n.kt)("inlineCode",{parentName:"p"},"PartialOrderOrEq"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"trait PartialOrderOrEq[A: CouldHave[PartialOrder]: EqOrEquals]:\n  def p(x: A, y: A): Double =\n    CouldHave[PartialOrder, A]\n      .act(_.partialCompare(x, y))\n          (() => if EqOrEquals.e(x, y) then 0.0 else Double.NaN)\n")),(0,n.kt)("p",null,'This is a "best attempt" at a partial order for any given type.'),(0,n.kt)("p",null,"In the following function"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"def yourFunction[A: PartialOrderOrEq](x: A, y: A):\n  // ...\n  PartialOrderOrEq.p(x, y)\n  // ...\n")),(0,n.kt)("p",null,"the following rules will be applied:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"if a given ",(0,n.kt)("inlineCode",{parentName:"li"},"PartialOrder")," (or a complete ",(0,n.kt)("inlineCode",{parentName:"li"},"Order"),", which extends the trait) exists, then that instance will be used to perform the comparison"),(0,n.kt)("li",{parentName:"ol"},"otherwise, if a given ",(0,n.kt)("inlineCode",{parentName:"li"},"Eq")," (Cats Equality) instance exists, then the function will return 0.0 if ",(0,n.kt)("inlineCode",{parentName:"li"},"x === y"),"; ",(0,n.kt)("inlineCode",{parentName:"li"},"NaN")," otherwise"),(0,n.kt)("li",{parentName:"ol"},"finally, if we still have no comparison, the two values will be compared using the JVM ",(0,n.kt)("inlineCode",{parentName:"li"},".equals()")," method; returning 0.0 if ",(0,n.kt)("inlineCode",{parentName:"li"},"x.equals(y)")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"NaN")," otherwise.")))}c.isMDXComponent=!0}}]);